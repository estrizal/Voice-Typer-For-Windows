from pyqt5 import QtWidgets, Qtgui,QtCore
from Pyqt5.QtGui import QMovie
import sys
from Pyqt5.QtWidgets import *
from Pyqt5.QtCore import *
from Pyqt5.QtGui import *
from Pyqt5.uic import loadUiType

import pyttsx3
import speech_recognition as sr
import datetime
import wikipedia
import time #import time
from selenium.webdriver.support.ui import Select #pip install selenium
from selenium.webdriver.common.keys import Keys #you have to learn more about the selenium library and download the webdriver
from selenium import webdriver
import pyautogui
# Use female voice
import pyperclip
import os

flags = QtCore.Qt.WindowFlags(QtCore.Qt.FramelessWindowHint)

hiddenimports = [
    'pyttsx3.drivers',
    'pyttsx3.drivers.dummy',
    'pyttsx3.drivers.espeak',
    'pyttsx3.drivers.nsss',
    'pyttsx3.drivers.sapi5', ]

engine = pyttsx3.init('sapi5')

voices = engine.getProperty('voice')
engine.setProperty('voice', voices)
engine.setProperty('rate', 150)
engine.setProperty('volume', 10)

toend = 1

def speak(audio):
  engine.say(audio)
  engine.runAndWait()

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning!")
    elif hour>=12 and hour<18:
        speak("Good Afternoon!")
    else:
        speak("Good Evening!")
    speak("I am friday, is there anything to help you sir?")

def takecommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening....")
        r.pause_threshold = 1
        audio = r.listen(source)
    try:
     print("Recognizing....")
     query = r.recognize_google(audio, language='en-in')
     print(f"user said: {query}\n")
    except Exception as e:
      print(e)
      return "None"
    return query


def typenh():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening....")
        r.pause_threshold = 1
        audio = r.listen(source)
    try:
     print("Recognizing....")
     typethingh = r.recognize_google(audio, language='hi')
     print(f"user said: {typethingh}\n")
    except Exception as e:
      print(e)
      speak("sorry I could not understand, say that again please...")
      return "None"
    return typethingh
while True:
 while toend == 1:
    print('backlistening...')
    query = takecommand().lower()
    if 'hey friday' in query:
        toend = 0
    if 'hi friday' in query:
        toend = 0


 while toend == 0:
    wishMe()
    while toend == 0:
     query = takecommand().lower()
     query.replace("could you", "")
     query.replace("please", "")
     if 'wikipedia' in query:
            speak('searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("according to wikipedia")
            speak(results)
     if 'manav sampada' in query:
            speak('loging in to manav sampada')
            browser = webdriver.Chrome('D:\\chromedriver.exe') #use your own webdriver location(related to browser automation by selenium)
            browser.get('http://ehrms.upsdc.gov.in/')
            elem = browser.find_element_by_partial_link_text('eHRMS Login')
            elem.get_attribute('href')
            time.sleep(1)
            elem.click()
            time.sleep(1)
            loginr = browser.find_element_by_xpath('//*[@id="txtusername"]')
            loginr.send_keys('972764')
            time.sleep(1)
            select = Select(browser.find_element_by_id('ddldept'))
            select.select_by_visible_text('Basic Education')
            time.sleep(1)
            password = browser.find_element_by_xpath('//*[@id="txtpwd"]')
            password.send_keys('Vandana@2001')
            speak('sir I have filled all userID password etc. but ')
            speak('sir you have to fill the human verification captha by yourself as I am just a bot ')
            speak('I hope I was able to assist you')
     if 'open' in query:
            speak('opening sir')
            query = query.replace("program", "")
            pyautogui.click(27, 880)
            pyautogui.typewrite(query)
            time.sleep(1)
            pyautogui.click(79,441)
     if 'send' and 'gmail' in query:
            speak('opening gmail')
            browser = webdriver.Chrome('D:\\chromedriver.exe')
            browser.get('https://accounts.google.com/b/0/AddMailService')
            time.sleep(1)
            login = browser.find_element_by_xpath('//*[@id="identifierId"]')
            login.send_keys('adityamansi2006@gmail.com')
            login.send_keys(Keys.ENTER)
            time.sleep(1)
            loginpwd = browser.find_element_by_xpath('//*[@id="password"]/div[1]/div/div[1]/input')
            loginpwd.send_keys('estrizal@1234')
            loginpwd.send_keys(Keys.ENTER)
            time.sleep(10)
            try:
                speak('just a sec')
                compose = browser.find_element_by_class_name('z0')
                time.sleep(2)
                compose.click()
                time.sleep(1)
                speak('whom do you want to send the gmail')
                sendto = takecommand().lower()
                sendto = ''.join(sendto.split())
                tom = browser.find_element_by_name('to')
                tom.send_keys(sendto)
                speak('what is the subject?')
                subject = browser.find_element_by_name('subjectbox')
                time.sleep(0.5)

                whatissu = takecommand()
                subject.send_keys(whatissu)
                body = browser.find_element_by_name('Message Body')
                speak('what is the main body?')
                mainbody = takecommand()
                body.send_keys(mainbody)

            except Exception as identifier:
                compose = browser.find_element_by_xpath('//*[@id=":jm"]/div/div')
                time.sleep(1)
                compose.click()
                time.sleep(1)
                speak('whom do you want to send the gmail')
                sendto = takecommand().lower()
                sendto = ''.join(sendto.split())
                tom = browser.find_element_by_name('to')
                tom.send_keys(sendto)
                subject = browser.find_element_by_name('subjectbox')
                time.sleep(0.5)
                speak('what is the subject?')
                whatissu = takecommand()
                subject.send_keys(whatissu)
                body = browser.find_element_by_name('Message Body')
                speak('what is the main body?')
                mainbody = takecommand()
                body.send_keys(mainbody)

     if 'hindi' in query:
        speak('what to type?')
        typethingh = typenh()
        content = typethingh
        pyperclip.copy(content)
        time.sleep(0.5)
        pyautogui.hotkey('ctrl', 'v')

     if 'do you have a boyfriend' in query:
         speak('I am happy to be single')

     if 'siri' in query:
         speak('siri is smart but I dont like him')

     if 'how are you' in query:
         speak('I am good ')

     if 'i hate you' in query:
         speak('than go to siri or google. why are you even talking to me')

     if 'who is your creator' in query:
         speak("my creater is aditya maurya")

     if 'who made you' in query:
         speak('aditya maurya made me. he is also known as estriadi')

     if 'who created you' in query:
         speak('aditya maurya created me    ')

     if 'whatsapp' in query:
         browser = webdriver.Chrome('D:\\chromedriver.exe')
         speak('opening whatsapp web')
         browser.get('https://web.whatsapp.com/')
         speak('please scan the qr code. I am waiting for 10 seconds')
         time.sleep(10)
         try:
             find = browser.find_element_by_xpath('//*[@id="side"]/div[1]/div/label/div/div[2]')
             find.click()
             speak('tell the first word of the contact to whom you want to send the messege')
             sendmsg = takecommand()
             find.send_keys(sendmsg)
             time.sleep(1.5)
             find.send_keys(Keys.ENTER)
             try:
                 typenum = browser.find_element_by_xpath('//*[@id="main"]/footer/div[1]/div[2]/div/div[2]')
                 typenum.click()
                 speak('what do you want to send sir?')
                 whattosend = takecommand()
                 typenum.send_keys(whattosend)
                 typenum.send_keys(Keys.ENTER)
             except Exception as identifier:
                 speak('there is no contact as'+sendmsg)
         except Exception as identifier:
             speak('you did not make it in 10 seconds')
     if 'quit' in query:
         speak('see you later!')
         toend = 1
     if 'bye' in query:
         speak('see you soon!!')
         toend = 1
     if 'self coding' in query:
         speak('aye! aye!')
         os.startfile('selfprograming.py')
         toend = 1
         os._exit(0)

     if 'what do you eat' in query:
         speak('I usually prefers 4g internet')
     if 'i am a good boy' in query:
         speak('i am also good')
     if 'i am a good boy' in query:
         speak('admiring yourself is good')





#gif_of_orb


FROM_MAIN,_ = loadUiType(os.path.join(os.path.dirname(__file__),"./friday.ui"))

class Main(QMainWindow,FROM_MAIN):
    def __init__(self,parent=None):
        super(Main,self).__init__(parent)
        self.setupUi(self)
        self.setFixedSize(1600,900)
        self.giflabel = Qlabel
        Dspeak = mainT()
        self.giflabel = QMovie("./friday_gui_assets/transparent_and_match_background_orb.gif", QByteArray(), self)
        self.giflabel.setCacheMode(QMovie.CacheAll)
        self.gif_of_orb.setMovie(self.label_7)
        self.giflabel.start()

        self.ts = time.strftime("%A, %d %B")

        Dspeak.start()
        self.background_label.setPixmap(QPixmap("./friday_gui_assets/background.jpg"))
        self.inside_user_sadi.setText("<font size=12 color='#4ac8eb'>"+self.ts+"</font>")



app = QtWidgets.QApplications(sys.argv)
main = Main()
main.show()
exit(app.exec_())